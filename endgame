#!/bin/python3

import json
import sys

def main():
    args = sys.argv
    if args[1] == 'rm':
        removed = removeLog()
        print('removed', removed)
    elif args[1] == 'add':
        appendLogs({"test":"srntdeai"})
        print('added')
    elif args[1] == 'list':
        print(formatList(formatLog, lastLogs(args)))
    elif args[1] == "stats":
        print(formatList(formatLift3RM, readLogs('stats.json')["lifts"]))
    else:
        print(liftTypes)
        print('invalid argument')

def liftType(name,typ,sets,reps,percentOf3RM):
        return {
            "name": name,
            "type": typ,
            "sets": sets,
            "reps": reps,
            "percentOf3RM": percentOf3RM
        }
liftTypes = [
        liftType("Squat","Volume",3,5,87),
        liftType("Squat","PR",1,3,100),
        liftType("Deadlift","Volume",1,3,100),
        liftType("Deadlift","PR",1,3,100),
        liftType("Press","Volume",1,3,100),
        liftType("Press","PR",1,3,100),
        liftType("Bench","Volume",1,3,100),
        liftType("Bench","PR",1,3,100),
        liftType("Chins","Volume",1,3,100),
        liftType("Chins","PR",1,3,100),
        liftType("Rows","Volume",1,3,100),
        liftType("Rows","PR",1,3,100),
        
        ]

def writeLogs(data):
    with open('logs.json', 'w') as f:
        json.dump(data, f, indent=2)

def readLogs(file="logs.json"):
    with open(file) as f:
        return json.loads(f.read())

def appendLogs(data):
    logs = readLogs()
    logs.append(data)
    writeLogs(logs)

def removeLog():
    logs = readLogs()
    removed = logs.pop()
    writeLogs(logs)
    return removed
    
def lastLogs(args):
    try:    amount = args[2]
    except: amount = 1

    logs = readLogs()
    i = int(amount)
    if len(logs) < i:
        return "There aren't that many logs"
    return logs[-i:]

def formatList(formatFunc, li):
    return "\n".join([formatFunc(el) for el in li])

def formatLift3RM(lift):
    return f"{lift['name']} 3RM: {lift['3RM']}kg"

def formatLog(log):
    return f"{log['date']}:\n{formatList(formatLogLift, log['lifts'])}"

def formatLogLift(lift):
    return f"{lift['type']} {lift['name']}: {lift['weight']}kg"

        
if __name__ == "__main__": main()
